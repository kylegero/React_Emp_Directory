{"version":3,"sources":["Sorting.js","Table.js","App.js","API.js","reportWebVitals.js","index.js"],"names":["Sorting","emps","updateEmps","useState","inputValue","updateInput","useEffect","filteredEmps","filter","name","first","toLowerCase","indexOf","value","onChange","e","target","Table","sortedEmps","updateSortedEmps","className","scope","onClick","updateSort","sort","a","b","nameA","nameB","map","location","city","state","country","postcode","thumbnail","picture","cell","phone","gender","email","last","title","src","App","initialEmps","updateAvailableEmps","empsToRender","updateEmpsToRender","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12f45851.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Sorting = ({ emps, updateEmps }) => {\r\n  const [inputValue, updateInput] = useState(\"\")\r\n  useEffect(() => {\r\n    const filteredEmps =\r\n      inputValue === \"\"\r\n        ? emps\r\n        : emps.filter(\r\n            ({ name: { first } }) =>\r\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\r\n          );\r\n    updateEmps(filteredEmps);\r\n  }, [inputValue, emps]);\r\n\r\n  return (\r\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\r\n  );\r\n};\r\n\r\nexport default Sorting;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Table = ({ emps }) => {\r\n  const [sortedEmps, updateSortedEmps] = useState([]);\r\n  useEffect(() => updateSortedEmps(emps), [emps]);\r\n  return (\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">title</th>\r\n            <th\r\n              scope=\"col\"\r\n              onClick={() => {\r\n                const empsCopy = [...emps];\r\n                const updateSort = empsCopy.sort((a, b) => {\r\n                  const nameA = a.name.first;\r\n                  const nameB = b.name.first;\r\n                  if (nameA < nameB) {\r\n                    return -1;\r\n                  }\r\n                  if (nameA > nameB) {\r\n                    return 1;\r\n                  }\r\n                  return 0;\r\n                });\r\n                updateSortedEmps(updateSort);\r\n              }}\r\n            >\r\n              First\r\n            </th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">Gender</th>\r\n            <th scope=\"col\">E-mail</th>\r\n            <th scope=\"col\">Phone</th>\r\n            <th scope=\"col\">Cell</th>\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">State</th>\r\n            <th scope=\"col\">Country</th>\r\n            <th scope=\"col\">ZIPcode</th>\r\n            <th scope=\"col\">Picture</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedEmps.map(\r\n            ({\r\n              location: { city, state, country, postcode },\r\n              picture: { thumbnail },\r\n              cell,\r\n              phone,\r\n              gender,\r\n              email,\r\n              name: { first, last, title }\r\n            }) => (\r\n              <tr key={email}>\r\n                <td>{title}</td>\r\n                <th>{first}</th>\r\n                <td>{last}</td>\r\n                <td>{gender}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n                <td>{cell}</td>\r\n                <td>{city}</td>\r\n                <td>{state}</td>\r\n                <td>{country}</td>\r\n                <td>{postcode}</td>\r\n                <td>\r\n                  <img src={thumbnail} />\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Table;","import React, { useEffect, useState } from \"react\";\nimport Sorting from \"./Sorting\";\nimport Table from \"./Table\";\nimport { getEmps } from \"./API\";\nimport \"./App.css\";\n\nfunction App() {\n  const [initialEmps, updateAvailableEmps] = useState([]);\n  const [empsToRender, updateEmpsToRender] = useState([]);\n\n  useEffect(() => {\n    getEmps().then(({ data: { results } }) => updateAvailableEmps(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <p>\n        To sort employees by first name, begin entering a first name below\n        <br></br>\n        If you'd like to sort employees alphabetically by first name, give the \"First\" a click\n      </p>\n      <Sorting emps={initialEmps} updateEmps={updateEmpsToRender} />\n      <Table emps={empsToRender} />\n    </div>\n  );\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport const getEmps = function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}